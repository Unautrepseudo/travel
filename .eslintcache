[{"G:\\Coding\\PROJETS\\travel\\src\\index.tsx":"1","G:\\Coding\\PROJETS\\travel\\src\\reportWebVitals.ts":"2","G:\\Coding\\PROJETS\\travel\\src\\Footer.tsx":"3","G:\\Coding\\PROJETS\\travel\\src\\Main.tsx":"4","G:\\Coding\\PROJETS\\travel\\src\\context.js":"5","G:\\Coding\\PROJETS\\travel\\src\\Header.tsx":"6","G:\\Coding\\PROJETS\\travel\\src\\NavLinks.js":"7","G:\\Coding\\PROJETS\\travel\\src\\Sidebar.jsx":"8","G:\\Coding\\PROJETS\\travel\\src\\Submenu.jsx":"9","G:\\Coding\\PROJETS\\travel\\src\\App.jsx":"10"},{"size":579,"mtime":1613312480064,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":156,"mtime":1612382906847,"results":"14","hashOfConfig":"12"},{"size":390,"mtime":1613496556312,"results":"15","hashOfConfig":"12"},{"size":1356,"mtime":1613554520709,"results":"16","hashOfConfig":"12"},{"size":1592,"mtime":1613554627242,"results":"17","hashOfConfig":"12"},{"size":1977,"mtime":1613492085391,"results":"18","hashOfConfig":"12"},{"size":1025,"mtime":1613555932925,"results":"19","hashOfConfig":"12"},{"size":1027,"mtime":1613555459051,"results":"20","hashOfConfig":"12"},{"size":484,"mtime":1613582153145,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"elavvu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"G:\\Coding\\PROJETS\\travel\\src\\index.tsx",[],["49","50"],"G:\\Coding\\PROJETS\\travel\\src\\reportWebVitals.ts",[],"G:\\Coding\\PROJETS\\travel\\src\\Footer.tsx",[],"G:\\Coding\\PROJETS\\travel\\src\\Main.tsx",[],"G:\\Coding\\PROJETS\\travel\\src\\context.js",["51"],"import React, { useState, useContext } from 'react';\r\nimport navLinks from './NavLinks';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [isSidebarOpen, setisSidebarOpen] = useState(false);\r\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\r\n  const [location, setLocation] = useState({});\r\n  const [submenuContent, setSubmenuContent] = useState({\r\n    name: '',\r\n    countries: [],\r\n  });\r\n  const [links, setLinks] = useState(navLinks);\r\n\r\n  const toggleSidebar = () => {\r\n    setisSidebarOpen(!isSidebarOpen);\r\n  };\r\n  const openSubmenu = (text, coordinates) => {\r\n    const content = links.find((link) => link.name === text);\r\n    setSubmenuContent(content);\r\n    setLocation(coordinates);\r\n    setIsSubmenuOpen(true);\r\n    console.log(isSubmenuOpen);\r\n  };\r\n\r\n  const closeSubmenu = (e) => {\r\n    if (!e.target.classList.contains('sub')) {\r\n      setIsSubmenuOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        isSidebarOpen,\r\n        toggleSidebar,\r\n        isSubmenuOpen,\r\n        openSubmenu,\r\n        location,\r\n        submenuContent,\r\n        closeSubmenu,\r\n        setIsSubmenuOpen,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n",["52","53"],"G:\\Coding\\PROJETS\\travel\\src\\Header.tsx",["54","55","56","57","58"],"import React, { useState } from 'react';\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { useGlobalContext } from './context'\r\nimport navLinks from './NavLinks';\r\nimport Submenu from './Submenu';\r\n\r\nconst Header = () => {\r\n\r\n    const { isSidebarOpen, toggleSidebar, isSubmenuOpen, openSubmenu, setIsSubmenuOpen } = useGlobalContext()\r\n    const [links, setLinks] = useState(navLinks)\r\n    const [linksHover, setLinksHover] = useState(false)\r\n\r\n    const displaySubmenu = (e: any) => {\r\n        const linkText = e.target.textContent;\r\n        const coord = e.target.getBoundingClientRect();\r\n        const left = coord.left;\r\n        const bottom = coord.bottom - 3;\r\n        openSubmenu(linkText, { left, bottom })\r\n    }\r\n    const { closeSubmenu } = useGlobalContext()\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='head' onMouseOver={closeSubmenu}>\r\n                <p className=\"title\" >Carnet de voyage</p>\r\n                <nav className=\"nav\">\r\n                    <ul className='sub'>\r\n                        {links.map(({ name }, i) => {\r\n                            return (\r\n                                <span className='sub' key={i} onMouseOver={displaySubmenu}>{name}</span>)\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n                <button className=\"toggle-menu\" onClick={toggleSidebar}>\r\n                    {isSidebarOpen ? <FaTimes className='fanav' /> : <FaBars className='fanav' />}\r\n                </button>\r\n            </div>\r\n            <Submenu />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","G:\\Coding\\PROJETS\\travel\\src\\NavLinks.js",[],"G:\\Coding\\PROJETS\\travel\\src\\Sidebar.jsx",["59"],"import React, { useState } from 'react';\r\nimport { useGlobalContext } from './context';\r\nimport navLinks from './NavLinks';\r\n\r\nconst Sidebar = () => {\r\n  const { isSidebarOpen } = useGlobalContext();\r\n  const [links, setLinks] = useState(navLinks);\r\n\r\n  return (\r\n    <aside>\r\n      <div className={`${isSidebarOpen ? 'sidebar' : 'show-sidebar '}`}>\r\n        {links.map(({ name, countries }, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <h2 className=\"side-name\">{name}</h2>\r\n              {countries.map(({ thumb, title }, index) => {\r\n                return (\r\n                  <div key={index} className=\"thumb-container\">\r\n                    <span className=\"subthumb-cont\">\r\n                      <img className=\"side-thumb\" src={thumb} alt={title} />\r\n                    </span>\r\n                    <p>{title}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default Sidebar;\r\n",["60","61"],"G:\\Coding\\PROJETS\\travel\\src\\Submenu.jsx",["62"],"import React, { useRef, useEffect } from 'react';\r\nimport { useGlobalContext } from './context';\r\n\r\nconst Submenu = () => {\r\n  const {\r\n    isSubmenuOpen,\r\n    location,\r\n    submenuContent: { countries },\r\n  } = useGlobalContext();\r\n\r\n  const submenu = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const subCurrent = submenu.current;\r\n    const { left, bottom } = location;\r\n    subCurrent.style.left = `${left}px`;\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className={`${!isSubmenuOpen ? 'submenu show-submenu' : 'hide'}sub  `}>\r\n      <div className=\"sublinks-container sub\" ref={submenu}>\r\n        {countries.map(({ thumb, title }, index) => {\r\n          return (\r\n            <div key={index} className=\"sub-cont sub\">\r\n              <p className=\"sub-title\">{title}</p>\r\n              <span className=\"subthumb-cont\">\r\n                <img className=\"sub-thumb\" src={thumb} alt={title} />\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submenu;\r\n","G:\\Coding\\PROJETS\\travel\\src\\App.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":14,"column":17,"nodeType":"69","messageId":"70","endLine":14,"endColumn":25},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":43,"nodeType":"69","messageId":"70","endLine":9,"endColumn":56},{"ruleId":"71","severity":1,"message":"73","line":9,"column":71,"nodeType":"69","messageId":"70","endLine":9,"endColumn":87},{"ruleId":"71","severity":1,"message":"68","line":10,"column":19,"nodeType":"69","messageId":"70","endLine":10,"endColumn":27},{"ruleId":"71","severity":1,"message":"74","line":11,"column":12,"nodeType":"69","messageId":"70","endLine":11,"endColumn":22},{"ruleId":"71","severity":1,"message":"75","line":11,"column":24,"nodeType":"69","messageId":"70","endLine":11,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":7,"column":17,"nodeType":"69","messageId":"70","endLine":7,"endColumn":25},{"ruleId":"63","replacedBy":"76"},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","severity":1,"message":"78","line":15,"column":19,"nodeType":"69","messageId":"70","endLine":15,"endColumn":25},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'setLinks' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'isSubmenuOpen' is assigned a value but never used.","'setIsSubmenuOpen' is assigned a value but never used.","'linksHover' is assigned a value but never used.","'setLinksHover' is assigned a value but never used.",["79"],["80"],"'bottom' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]