[{"G:\\Coding\\PROJETS\\travel\\src\\index.tsx":"1","G:\\Coding\\PROJETS\\travel\\src\\reportWebVitals.ts":"2","G:\\Coding\\PROJETS\\travel\\src\\Footer.tsx":"3","G:\\Coding\\PROJETS\\travel\\src\\Main.tsx":"4","G:\\Coding\\PROJETS\\travel\\src\\context.js":"5","G:\\Coding\\PROJETS\\travel\\src\\NavLinks.js":"6","G:\\Coding\\PROJETS\\travel\\src\\Sidebar.jsx":"7","G:\\Coding\\PROJETS\\travel\\src\\Submenu.jsx":"8","G:\\Coding\\PROJETS\\travel\\src\\App.jsx":"9","G:\\Coding\\PROJETS\\travel\\src\\error.jsx":"10","G:\\Coding\\PROJETS\\travel\\src\\Error.jsx":"11","G:\\Coding\\PROJETS\\travel\\src\\Pays.jsx":"12","G:\\Coding\\PROJETS\\travel\\src\\Header.jsx":"13","G:\\Coding\\PROJETS\\travel\\src\\Continent.jsx":"14","G:\\Coding\\PROJETS\\travel\\src\\SVG\\CroatiaSvg.tsx":"15"},{"size":579,"mtime":1613312480064,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":172,"mtime":1613654220851,"results":"19","hashOfConfig":"17"},{"size":390,"mtime":1613651878750,"results":"20","hashOfConfig":"17"},{"size":1323,"mtime":1613661947764,"results":"21","hashOfConfig":"17"},{"size":1984,"mtime":1613737493685,"results":"22","hashOfConfig":"17"},{"size":1256,"mtime":1613661913130,"results":"23","hashOfConfig":"17"},{"size":1199,"mtime":1613731525670,"results":"24","hashOfConfig":"17"},{"size":802,"mtime":1613732644256,"results":"25","hashOfConfig":"17"},{"size":130,"mtime":1613644591483,"results":"26","hashOfConfig":"17"},{"size":726,"mtime":1613734404562,"results":"27","hashOfConfig":"17"},{"size":365,"mtime":1613665992826,"results":"28","hashOfConfig":"17"},{"size":1724,"mtime":1613655560549,"results":"29","hashOfConfig":"17"},{"size":428,"mtime":1613738267461,"results":"30","hashOfConfig":"17"},{"size":45799,"mtime":1613335370008,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"elavvu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Coding\\PROJETS\\travel\\src\\index.tsx",[],["68","69"],"G:\\Coding\\PROJETS\\travel\\src\\reportWebVitals.ts",[],"G:\\Coding\\PROJETS\\travel\\src\\Footer.tsx",[],"G:\\Coding\\PROJETS\\travel\\src\\Main.tsx",[],"G:\\Coding\\PROJETS\\travel\\src\\context.js",["70"],"import React, { useState, useContext } from 'react';\r\nimport navLinks from './NavLinks';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [isSidebarOpen, setisSidebarOpen] = useState(false);\r\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\r\n  const [location, setLocation] = useState({});\r\n  const [submenuContent, setSubmenuContent] = useState({\r\n    name: '',\r\n    countries: [],\r\n  });\r\n  const [links, setLinks] = useState(navLinks);\r\n\r\n  const toggleSidebar = () => {\r\n    setisSidebarOpen(!isSidebarOpen);\r\n  };\r\n  const openSubmenu = (text, coordinates) => {\r\n    const content = links.find((link) => link.name === text);\r\n    setSubmenuContent(content);\r\n    setLocation(coordinates);\r\n    setIsSubmenuOpen(true);\r\n  };\r\n\r\n  const closeSubmenu = (e) => {\r\n    if (!e.target.classList.contains('sub')) {\r\n      setIsSubmenuOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        isSidebarOpen,\r\n        toggleSidebar,\r\n        isSubmenuOpen,\r\n        openSubmenu,\r\n        location,\r\n        submenuContent,\r\n        closeSubmenu,\r\n        setIsSubmenuOpen,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n",["71","72"],"G:\\Coding\\PROJETS\\travel\\src\\NavLinks.js",[],"G:\\Coding\\PROJETS\\travel\\src\\Sidebar.jsx",["73"],"import React, { useState } from 'react';\r\nimport { useGlobalContext } from './context';\r\nimport navLinks from './NavLinks';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  const { isSidebarOpen, toggleSidebar } = useGlobalContext();\r\n  const [links, setLinks] = useState(navLinks);\r\n\r\n  return (\r\n    <aside>\r\n      <div className={`${isSidebarOpen ? 'sidebar' : 'show-sidebar '}`}>\r\n        {links.map(({ name, countries }, i) => {\r\n          return (\r\n            <div key={i} style={{ color: 'black' }}>\r\n              <h2 className=\"side-name\">{name}</h2>\r\n              {countries.map(({ thumb, title }, index) => {\r\n                return (\r\n                  <Link\r\n                    to={`/${title}`}\r\n                    key={index}\r\n                    className=\"thumb-container\"\r\n                    onClick={toggleSidebar}\r\n                  >\r\n                    <span className=\"subthumb-cont\">\r\n                      <img className=\"side-thumb\" src={thumb} alt={title} />\r\n                    </span>\r\n                    <p>{title}</p>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","G:\\Coding\\PROJETS\\travel\\src\\Submenu.jsx",["74"],"import React, { useRef, useEffect } from 'react';\r\nimport { useGlobalContext } from './context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Submenu = () => {\r\n  const {\r\n    isSubmenuOpen,\r\n    location,\r\n    submenuContent: { countries },\r\n  } = useGlobalContext();\r\n\r\n  const submenu = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const subCurrent = submenu.current;\r\n    const { left, bottom } = location;\r\n    subCurrent.style.left = `${left}px`;\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className={`${!isSubmenuOpen ? 'submenu show-submenu' : 'hide'}sub  `}>\r\n      <div className=\"sublinks-container sub\" ref={submenu}>\r\n        {countries.map(({ thumb, title }, index) => {\r\n          return (\r\n            <Link\r\n              to={`/continent/${title}`}\r\n              style={{ color: 'black' }}\r\n              key={index}\r\n              className=\"sub-cont sub\"\r\n            >\r\n              <p className=\"sub-title\">{title}</p>\r\n              <span className=\"subthumb-cont\">\r\n                <img className=\"sub-thumb\" src={thumb} alt={title} />\r\n              </span>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submenu;\r\n","G:\\Coding\\PROJETS\\travel\\src\\App.jsx",[],"G:\\Coding\\PROJETS\\travel\\src\\error.jsx",[],"G:\\Coding\\PROJETS\\travel\\src\\Error.jsx",[],"G:\\Coding\\PROJETS\\travel\\src\\Pays.jsx",[],"G:\\Coding\\PROJETS\\travel\\src\\Header.jsx",["75","76","77","78","79"],"import React, { useState } from 'react';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { useGlobalContext } from './context';\r\nimport navLinks from './NavLinks';\r\nimport Submenu from './Submenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const {\r\n    isSidebarOpen,\r\n    toggleSidebar,\r\n    isSubmenuOpen,\r\n    openSubmenu,\r\n    setIsSubmenuOpen,\r\n  } = useGlobalContext();\r\n  const [links, setLinks] = useState(navLinks);\r\n  const [linksHover, setLinksHover] = useState(false);\r\n\r\n  const displaySubmenu = (e) => {\r\n    const linkText = e.target.textContent;\r\n    const coord = e.target.getBoundingClientRect();\r\n    const left = coord.left;\r\n    const bottom = coord.bottom - 3;\r\n    openSubmenu(linkText, { left, bottom });\r\n  };\r\n  const { closeSubmenu } = useGlobalContext();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"head\" onMouseOver={closeSubmenu}>\r\n        <Link to=\"/\" style={{ color: 'black' }} className=\"title\">\r\n          Carnet de voyage\r\n        </Link>\r\n\r\n        <nav className=\"nav\">\r\n          <ul className=\"sub\">\r\n            {links.map(({ name }, i) => {\r\n              return (\r\n                <Link to=\"/continent\">\r\n                  <span className=\"sub\" key={i} onMouseOver={displaySubmenu}>\r\n                    {name}\r\n                  </span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n        <button className=\"toggle-menu\" onClick={toggleSidebar}>\r\n          {isSidebarOpen ? (\r\n            <FaTimes className=\"fanav\" />\r\n          ) : (\r\n            <FaBars className=\"fanav\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n      <Submenu />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","G:\\Coding\\PROJETS\\travel\\src\\Continent.jsx",[],"G:\\Coding\\PROJETS\\travel\\src\\SVG\\CroatiaSvg.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":14,"column":17,"nodeType":"86","messageId":"87","endLine":14,"endColumn":25},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":8,"column":17,"nodeType":"86","messageId":"87","endLine":8,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":16,"column":19,"nodeType":"86","messageId":"87","endLine":16,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":12,"column":5,"nodeType":"86","messageId":"87","endLine":12,"endColumn":18},{"ruleId":"84","severity":1,"message":"90","line":14,"column":5,"nodeType":"86","messageId":"87","endLine":14,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":16,"column":17,"nodeType":"86","messageId":"87","endLine":16,"endColumn":25},{"ruleId":"84","severity":1,"message":"91","line":17,"column":10,"nodeType":"86","messageId":"87","endLine":17,"endColumn":20},{"ruleId":"84","severity":1,"message":"92","line":17,"column":22,"nodeType":"86","messageId":"87","endLine":17,"endColumn":35},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'setLinks' is assigned a value but never used.","Identifier","unusedVar","'bottom' is assigned a value but never used.","'isSubmenuOpen' is assigned a value but never used.","'setIsSubmenuOpen' is assigned a value but never used.","'linksHover' is assigned a value but never used.","'setLinksHover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]